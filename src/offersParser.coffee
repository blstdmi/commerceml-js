CommerceMlParser = require './parser'
_ = require 'underscore'

class OffersParser extends CommerceMlParser
	getCollectRules : ->
		return {
			commercialInfo :
				start : ['КоммерческаяИнформация']

			classifier :
				start : ['КоммерческаяИнформация', 'Классификатор']
				include : [
					['КоммерческаяИнформация', 'Классификатор', 'Ид'],
					['КоммерческаяИнформация', 'Классификатор', 'Наименование'],
					['КоммерческаяИнформация', 'Классификатор', 'Владелец']
				]

			classifierProperty :
				start : ['КоммерческаяИнформация', 'Классификатор', 'Свойства', 'Свойство']
				include : [
					['КоммерческаяИнформация', 'Классификатор', 'Свойства', 'Свойство']
				]

			packageOffers :
				start : ['КоммерческаяИнформация', 'ПакетПредложений']
				include : [
					['КоммерческаяИнформация', 'ПакетПредложений', 'Ид']
					['КоммерческаяИнформация', 'ПакетПредложений', 'Наименование']
					['КоммерческаяИнформация', 'ПакетПредложений', 'ИдКаталога']
					['КоммерческаяИнформация', 'ПакетПредложений', 'ИдКлассификатора']
					['КоммерческаяИнформация', 'ПакетПредложений', 'Владелец']
					['КоммерческаяИнформация', 'ПакетПредложений', 'ТипыЦен']
				]

			warehouse :
				start : ['КоммерческаяИнформация', 'ПакетПредложений', 'Склады', 'Склад']
				include : [
					['КоммерческаяИнформация', 'ПакетПредложений', 'Склады', 'Склад']
				]

			offer :
				start : ['КоммерческаяИнформация', 'ПакетПредложений', 'Предложения', 'Предложение']
				include : [
					['КоммерческаяИнформация', 'ПакетПредложений', 'Предложения', 'Предложение']
				]
		}

module.exports = OffersParser